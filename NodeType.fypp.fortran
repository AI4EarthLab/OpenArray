  
#! TI : type id
#! TN : type name                  0
#! NA : kernel nampe appendix      1
#! SY : symbol                     2
#! LT : logical type               3
#! ET : expression type            4
#! EW : if element wise            5
#! CL : if change layout           6
#! EF : expresson form             7

#! [   TN,              NA,        SY,           LT,    ET,  EW,  CL,  EF]      
///:set L = &
      [["TYPE_UNKNOWN", "unknown", "unknown",    "",    "",  "T", "F",  ""],&
       ["TYPE_DATA",    "data",    "data",       "",    "",  "T", "F",  ""],&    
       ["TYPE_REF",     "ref",     "ref",        "",    "",  "F", "F",  ""],&
       ["TYPE_PLUS",    "plus",    "+",          "A",   "A", "T", "F",  "A+B"],&
       ["TYPE_MINUS",   "minus",   "-",          "A",   "A", "T", "F",  "A-B"],&
       ["TYPE_MULT",    "mult",    "*",          "A",   "A", "T", "F",  "A*B"],&
       ["TYPE_DIVD",    "divd",    "/",          "A",   "A", "F", "F",  "A/B"],&
       ["TYPE_GT",      "gt",      ">",          "B",   "A", "F", "F",  "A>B"],&
       ["TYPE_GE",      "ge",      ">=",         "B",   "A", "F", "F",  "A>=B"],&
       ["TYPE_LT",      "lt",      "<",          "B",   "A", "F", "F",  "A<B"],&
       ["TYPE_LE",      "le",      "<=",         "B",   "A", "F", "F",  "A<=B"],&
       ["TYPE_EQ",      "eq",      "==",         "B",   "A", "F", "F",  "A==B"],&
       ["TYPE_NE",      "ne",      "/=",         "B",   "A", "F", "F",  "A/=B"],&
       ["TYPE_MIN",     "min",     "min",        "",    "",  "F", "F",  "min"],&
       ["TYPE_MAX",     "max",     "max",        "",    "",  "F", "F",  "max"],&
       ["TYPE_POW",     "pow",     "pow",        "",    "",  "T", "F",  "(A)**M"],&
       ["TYPE_EXP",     "exp",     "exp",        "C",   "B", "T", "F",  "exp(A)"],&
       ["TYPE_SIN",     "sin",     "sin",        "C",   "B", "T", "F",  "sin(A)"],&
       ["TYPE_TAN",     "tan",     "tan",        "C",   "B", "T", "F",  "tan(A)"],&
       ["TYPE_COS",     "cos",     "cos",        "C",   "B", "T", "F",  "cos(A)"],&
       ["TYPE_RCP",     "rcp",     "rcp",        "C",   "B", "T", "F",  "1.0/A"],&
       ["TYPE_SQRT",    "sqrt",    "sqrt",       "C",   "B", "T", "F",  "sqrt(A)"],& 
       ["TYPE_ASIN",    "asin",    "asin",       "C",   "B", "T", "F",  "asin(A)"],& 
       ["TYPE_ACOS",    "acos",    "acos",       "C",   "B", "T", "F",  "acos(A)"],& 
       ["TYPE_ATAN",    "atan",    "atan",       "C",   "B", "T", "F",  "atan(A)"],& 
       ["TYPE_ABS",     "abs",     "abs",        "C",   "B", "T", "F",  "abs(A)"],&
       ["TYPE_LOG",     "log",     "log",        "C",   "B", "T", "F",  "log(A)"],&
       ["TYPE_UPLUS",   "uplus",   "+",          "C",   "B", "T", "F",  "+(A)"],&
       ["TYPE_UMINUS",  "uminus",  "-",          "C",   "B", "T", "F",  "-(A)"],&
       ["TYPE_LOG10",   "log10",   "log10",      "C",   "B", "T", "F",  "log10(A)"],&
       ["TYPE_TANH",    "tanh",    "tanh",       "C",   "B", "T", "F",  "tanh(A)"],& 
       ["TYPE_SINH",    "sinh",    "sinh",       "C",   "B", "T", "F",  "sinh(A)"],& 
       ["TYPE_COSH",    "cosh",    "cosh",       "C",   "B", "T", "F",  "cosh(A)"],&
       ["TYPE_DXC",     "dxc",     "dxc",        "D",   "B", "F", "F",  "DXC(A)"],&
       ["TYPE_DYC",     "dyc",     "dyc",        "D",   "B", "F", "F",  "DYC(A)"],&
       ["TYPE_DZC",     "dzc",     "dzc",        "D",   "B", "F", "F",  "DZC(A)"],&
       ["TYPE_AXB",     "axb",     "axb",        "D",   "B", "F", "F",  "AXB(A)"],&
       ["TYPE_AXF",     "axf",     "axf",        "D",   "B", "F", "F",  "AXF(A)"],&
       ["TYPE_AYB",     "ayb",     "ayb",        "D",   "B", "F", "F",  "AYB(A)"],&
       ["TYPE_AYF",     "ayf",     "ayf",        "D",   "B", "F", "F",  "AYF(A)"],&
       ["TYPE_AZB",     "azb",     "azb",        "D",   "B", "F", "F",  "AZB(A)"],&
       ["TYPE_AZF",     "azf",     "azf",        "D",   "B", "F", "F",  "AZF(A)"],&
       ["TYPE_DXB",     "dxb",     "dxb",        "D",   "B", "F", "F",  "DXB(A)"],&
       ["TYPE_DXF",     "dxf",     "dxf",        "D",   "B", "F", "F",  "DXF(A)"],&
       ["TYPE_DYB",     "dyb",     "dyb",        "D",   "B", "F", "F",  "DYB(A)"],&
       ["TYPE_DYF",     "dyf",     "dyf",        "D",   "B", "F", "F",  "DYF(A)"],&
       ["TYPE_DZB",     "dzb",     "dzb",        "D",   "B", "F", "F",  "DZB(A)"],&
       ["TYPE_DZF",     "dzf",     "dzf",        "D",   "B", "F", "F",  "DZF(A)"],&
       ["TYPE_SUM",     "sum",     "sum",        "",    "",  "F", "T",  "sum(A)"],&
       ["TYPE_CSUM",    "csum",    "csum",       "",    "",  "F", "F",  "csum(A)"], &
       ["TYPE_OR",      "or",      ".or.",       "F",   "A", "F", "F",  "A.or.B"],&
       ["TYPE_AND",     "and",     ".and.",      "F",   "A", "F", "F",  "A.and.B"],& 
       ["TYPE_NOT",     "not",     ".not.",      "G",   "B", "F", "F",  ".not.B"], &
       ["TYPE_REP",     "rep",     "rep",        "",    "",  "F", "T",  "rep(A)"], &
       ["TYPE_SHIFT",   "shift",   "shift",      "",    "",  "F", "F",  "shift(A)"]]    

#!get folders in ./modules/
#!:set FUNCS = [name for name in os.listdir('./modules') &
#!  if os.path.isdir(os.path.join('./modules/', name))]



























































