class Operator {
    private:
    public:
        int greater_than(NodePtr u, NodePtr v);
        int greater_equal(NodePtr u, NodePtr v);
        int less_than(NodePtr u, NodePtr v);
        int less_equal(NodePtr u, NodePtr v);
        int equal(NodePtr u, NodePtr v);
        int not_equal(NodePtr u, NodePtr v);
        NodePtr plus(NodePtr u, NodePtr v);
        NodePtr minus(NodePtr u, NodePtr v);
        NodePtr mult(NodePtr u, NodePtr v);
        NodePtr divd(NodePtr u, NodePtr v);
        NodePtr max(NodePtr u);
        NodePtr min(NodePtr u);
        NodePtr pow(NodePtr u, NodePtr v);
        NodePtr exp(NodePtr u);
        NodePtr sin(NodePtr u);
        NodePtr cos(NodePtr u);
        NodePtr tan(NodePtr u);
        NodePtr rcp(NodePtr u);
        NodePtr sqrt(NodePtr u);
        NodePtr asin(NodePtr u);
        NodePtr acos(NodePtr u);
        NodePtr atan(NodePtr u);
        NodePtr abs(NodePtr u);
        NodePtr log(NodePtr u);
        NodePtr uplus(NodePtr u);
        NodePtr uminus(NodePtr u);
        NodePtr log10(NodePtr u);
        NodePtr tanh(NodePtr u);
        NodePtr sinh(NodePtr u);
        NodePtr cosh(NodePtr u);
        NodePtr dxc(NodePtr u);
        NodePtr dyc(NodePtr u);
        NodePtr dzc(NodePtr u);
        NodePtr axb(NodePtr u);
        NodePtr ayb(NodePtr u);
        NodePtr azb(NodePtr u);
        NodePtr axf(NodePtr u);
        NodePtr ayf(NodePtr u);
        NodePtr azf(NodePtr u);
        NodePtr dxb(NodePtr u);
        NodePtr dyb(NodePtr u);
        NodePtr dzb(NodePtr u);
        NodePtr dxf(NodePtr u);
        NodePtr dyf(NodePtr u);
        NodePtr dzf(NodePtr u);
        NodePtr sum(NodePtr u);
        NodePtr csum(NodePtr u);
        NodePtr operator_or(NodePtr u);
        NodePtr operator_and(NodePtr u);
        NodePtr operator_not(NodePtr u);
        NodePtr repeat(NodePtr u);
        NodePtr shift(NodePtr u);
};
